
<div class="modal fade" id="dialogHobbies" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" data-backdrop="static" data-keyboard="false" aria-hidden="true">
    <div class="modal-dialog w-75 h-100" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Hobbies</h5>
                <button type="button" id="btnClose" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
                <div class="modal-body">
                    <input type="hidden" id="serial_no_hobbies" />
                    <input type="hidden" id="hobbies_id" />

                    <div class="col-sm-12 row mb-1 p-0">
                        <div class="col-sm-4 row mx-0">
                            <label class="col-form-label col-sm-4 px-0">Reg No</label>
                            <div class="col-sm-6 pr-0">
                                <input type="text" class="form-control" id="hobby_reg_no" name="hobby_reg_no" maxlength="50" />
                                <em id="hobby_reg_no_error" class="error error_msg"></em>
                            </div>
                        </div>
                        <div class="col-sm-4 row mx-0">
                            <label class="col-form-label col-sm-4 px-3">Hobby<span style="color:red;">*</span></label>
                            <div class="col-sm-6 pr-0">
                                <input type="text" class="form-control" id="hobby_name" name="hobby_name" maxlength="50" autocomplete="off" />
                                <em id="hobby_name_error" class="error error_msg"></em>
                            </div>
                        </div>
                    </div>

                    <div class="form-group row mb-0">
                        <div class="offset-sm-4 col-sm-3">
                            <button type="button" class="btn btn-primary" id="btnHobbiesAdd">
                                <i class="fa fa-plus"></i> <lable id="lblHobbiesAction"> Add</lable>
                            </button>
                            <button type="button" class="btn btn-danger" id="btnClearHobbies">
                                <i class="fa fa-close"></i> Clear
                            </button>
                        </div>
                    </div>
                    <hr />
                    <div class="form-group row">
                        <div class="col-sm table-responsive pre-scrollable px-1">
                            <table id="HobbiesTable" class="table table-bordered table-sm" style="table-layout:fixed">
                                <thead>
                                    <tr>
                                        <th style="width:10%">S/No</th>
                                        <th style="width:60%">Hobby</th>
                                        <th style="width:30%"></th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                                <tfoot>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="button" class="btn btn-danger" data-dismiss="modal" value="Close" />
                </div>
        </div>
    </div>
</div>

<link href="~/Components/Treed/style.css" rel="stylesheet" />
<style>
    .noselect {
        -webkit-touch-callout: none; /* iOS Safari */
        -webkit-user-select: none; /* Safari */
        -khtml-user-select: none; /* Konqueror HTML */
        -moz-user-select: none; /* Firefox */
        -ms-user-select: none; /* Internet Explorer/Edge */
        user-select: none; /* Non-prefixed version, currently
                                  supported by Chrome and Opera */
    }

    #mceu_121 {
        display: none;
    }

    #mceu_123 {
        display: none;
    }

    #mceu_152 {
        display: none;
    }

    #mceu_154 {
        display: none;
    }
    .error_msg {
        width: 100%;
        margin-top: 0.25rem;
        font-size: 80%;
        color: #f86c6b
    }
</style>

<script src="~/Scripts/tinymce/tinymce.min.js"></script>
<script type="text/javascript">
    var serial_no_hobbies = 0;
    $('#btnClearHobbies').click(function (e) {
        clear_Hobbies();
    });

    $('#btnHobbiesAdd').click(function (e) {
        if ($("#hobby_reg_no").val() != "" && $("#hobby_reg_no").val() != null &&
            $("#hobby_name").val() != "" && $("#hobby_name").val() != null) {
            console.log("True");
            var exitInfo = Hobbies.filter(x => x.hobby_name == $('#hobby_name').val() && x.serial_no_hobbies != $('#serial_no_hobbies').val());
            console.log(exitInfo);
            if (exitInfo.length == 0) {
                if ($("#serial_no_hobbies").val() != "" && $("#serial_no_hobbies").val() != null) {
                    $.each(Hobbies, function (i, obj) {
                        if (obj.serial_no_hobbies == $("#serial_no_hobbies").val()) {
                            obj = BindHobbies(obj);
                            return false;
                        }
                    });
                }
                else {
                    let a = BindHobbies({});
                    Hobbies.push(a);
                }
                console.log(Hobbies);
                $("#HobbiesTable tbody").empty();
                showHobbiesTable();
                clear_Hobbies();
            }
            else {
                toastr.error("This hobby is already existed!", "Error."),
                    setTimeout(function () { }, 1e4);
            }
        }
        else {
            if ($("#hobby_reg_no").val() == "" || $("#hobby_reg_no").val() == null) {
                $("#hobby_reg_no_error").text("Reg No is required!");
            }
            else {
                $("#hobby_reg_no_error").text("");
            }

            if ($("#hobby_name").val() == "" || $("#hobby_name").val() == null) {
                $("#hobby_name_error").text("Hobby is required!");
            }
            else {
                $("#hobby_name_error").text("");
            }

        }
    });

    function BindHobbies(obj) {
        obj.hobby_reg_no = $("#hobby_reg_no").val();
        obj.hobbies_id = $("#hobbies_id").val();
        obj.name = $("#hobby_name").val();     
        return obj;
    }

    function showHobbiesTable() {
        serial_no_hobbies = 0;
        if (Hobbies.length === 0) return;
        $("#HobbiesTable tbody").empty();
        $.each(Hobbies, function (i, obj) {
            serial_no_hobbies += 1;
            obj.serial_no_hobbies = serial_no_hobbies;         
            $("#HobbiesTable tbody").append(create_Rowstring_Hobbies(obj));
        });
    }

    function create_Rowstring_Hobbies(row) {
        var tblrow = "<tr>";

        tblrow += create_Colstring_Hobbies(row.serial_no_hobbies, false);
        tblrow += create_Colstring_Hobbies(row.name, false);
        var td4 = "<td>" +
            "<button type='button'" +
            "onclick=edit_hobbies('" + row.serial_no_hobbies + "'); " +
            'style="color: white; " class="btn btn-primary btn-sm"><span class="fa fa-edit"></span>&nbsp;Edit' +
            "</button>";

        var td5 =
            "<button type='button'" +
            "onclick=deleting_hobbies('" + row.serial_no_hobbies + "','" + row.prv_school_id + "'); " +
            'style="color: white; " class="btn btn-danger btn-sm"><span class="fa fa-edit"></span>&nbsp;Delete' +
            "</button>"
        "</td></tr > ";

        tblrow += td4 + td5 + "</tr>";
        return tblrow;
    }

    function create_Colstring_Hobbies(data, isalignright) {
        var tblcol = "<td" + (isalignright ? " class='text-right'>" : ">") + data + "</td>";
        return tblcol;
    }

    function deleting_hobbies(serial,prv_shool_id) {
        Hobbies = $.grep(Hobbies, function (obj) { return obj.serial_no_hobbies != serial; });
        console.log(Hobbies);
        $("#HobbiesTable tbody").empty();
        showHobbiesTable();
    }

    function edit_hobbies(serial) {
        $.each(Hobbies, function (i, obj) {
            if (obj.serial_no_hobbies == serial) {
                $("#serial_no_hobbies").val(serial);
                $("#hobbies_id").val(obj.hobbies_id);
                $("#hobby_name").val(obj.name);
                $("#lblHobbiesAction").text("Update");
                return false;
            }
        });
    }

    function clear_Hobbies() {
        $("#serial_no_hobbies").val("");
        $("#hobbies_id").val("");       
        $("#hobby_name").val("");
        $("#lblHobbiesAction").text("Add");
        $("#hobby_name_error").text("");
        $("#hobby_reg_no_error").text("");
    }
</script>
